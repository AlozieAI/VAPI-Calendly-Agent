{
    "name": "Pre-Call Automation",
    "flow": [
        {
            "id": 2,
            "module": "gateway:CustomWebHook",
            "version": 1,
            "parameters": {
                "hook": 1968322,
                "maxResults": 1
            },
            "mapper": {},
            "metadata": {
                "designer": {
                    "x": 0,
                    "y": 0
                },
                "restore": {
                    "parameters": {
                        "hook": {
                            "data": {
                                "editable": "true"
                            },
                            "label": "Calednly-webhook"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "hook",
                        "type": "hook:gateway-webhook",
                        "label": "Webhook",
                        "required": true
                    },
                    {
                        "name": "maxResults",
                        "type": "number",
                        "label": "Maximum number of results"
                    }
                ]
            }
        },
        {
            "id": 12,
            "module": "builtin:BasicRouter",
            "version": 1,
            "mapper": null,
            "metadata": {
                "designer": {
                    "x": 710,
                    "y": 122
                }
            },
            "routes": [
                {
                    "flow": [
                        {
                            "id": 22,
                            "module": "openai-gpt-3:CreateCompletion",
                            "version": 1,
                            "parameters": {
                                "__IMTCONN__": 3509850
                            },
                            "filter": {
                                "name": "endcall-route",
                                "conditions": [
                                    [
                                        {
                                            "a": "{{2.message.type}}",
                                            "b": "end-of-call-report",
                                            "o": "text:contain"
                                        }
                                    ]
                                ]
                            },
                            "mapper": {
                                "model": "o1-mini",
                                "top_p": "1",
                                "select": "chat",
                                "messages": [
                                    {
                                        "role": "assistant",
                                        "content": "You will be provided with call transcripts. Based on the transcript, summarize the discussion by highlighting whether a meeting was booked, rescheduled, or canceled. Clearly outline the reason for the action taken (booking, rescheduling, or canceling). If a meeting was booked, include detailed insights into what the caller was looking for, the specific services they expressed interest in, and any key points or concerns they discussed during the call. Dont make too long and try to make it detailed  but  consie\n\n Pleas just output the summary and nothing else. The only text I want you to output is the direct description of the call no title or any labels just the call summary. Like just give the summary don't say based on the transcript or here's the summary just give a description of what happened during call.\n\nHere’s the call transcript:{{2.message.transcript}}"
                                    }
                                ],
                                "max_tokens": "2048",
                                "temperature": "1",
                                "n_completions": "1",
                                "response_format": "text"
                            },
                            "metadata": {
                                "designer": {
                                    "x": 888,
                                    "y": -260
                                },
                                "restore": {
                                    "expect": {
                                        "stop": {
                                            "mode": "chose"
                                        },
                                        "model": {
                                            "mode": "chose",
                                            "label": "o1-mini (system)"
                                        },
                                        "select": {
                                            "label": "Create a Chat Completion (GPT and o1 models)"
                                        },
                                        "messages": {
                                            "mode": "chose",
                                            "items": [
                                                {
                                                    "role": {
                                                        "mode": "chose",
                                                        "label": "Assistant"
                                                    }
                                                }
                                            ]
                                        },
                                        "logit_bias": {
                                            "mode": "chose"
                                        },
                                        "response_format": {
                                            "mode": "chose",
                                            "label": "Text"
                                        },
                                        "additionalParameters": {
                                            "mode": "chose"
                                        }
                                    },
                                    "parameters": {
                                        "__IMTCONN__": {
                                            "data": {
                                                "scoped": "true",
                                                "connection": "openai-gpt-3"
                                            },
                                            "label": "My OpenAI connection"
                                        }
                                    }
                                },
                                "parameters": [
                                    {
                                        "name": "__IMTCONN__",
                                        "type": "account:openai-gpt-3",
                                        "label": "Connection",
                                        "required": true
                                    }
                                ],
                                "expect": [
                                    {
                                        "name": "select",
                                        "type": "select",
                                        "label": "Select Method",
                                        "required": true,
                                        "validate": {
                                            "enum": [
                                                "chat",
                                                "prompt"
                                            ]
                                        }
                                    },
                                    {
                                        "name": "temperature",
                                        "type": "number",
                                        "label": "Temperature",
                                        "validate": {
                                            "max": 2,
                                            "min": 0
                                        }
                                    },
                                    {
                                        "name": "top_p",
                                        "type": "number",
                                        "label": "Top P",
                                        "validate": {
                                            "max": 1,
                                            "min": 0
                                        }
                                    },
                                    {
                                        "name": "n_completions",
                                        "type": "number",
                                        "label": "Number"
                                    },
                                    {
                                        "name": "frequency_penalty",
                                        "type": "number",
                                        "label": "Frequency Penalty",
                                        "validate": {
                                            "max": 2,
                                            "min": -2
                                        }
                                    },
                                    {
                                        "name": "presence_penalty",
                                        "type": "number",
                                        "label": "Presence Penalty",
                                        "validate": {
                                            "max": 2,
                                            "min": -2
                                        }
                                    },
                                    {
                                        "name": "logit_bias",
                                        "spec": {
                                            "name": "value",
                                            "spec": [
                                                {
                                                    "name": "token",
                                                    "type": "text",
                                                    "label": "Token ID",
                                                    "required": true
                                                },
                                                {
                                                    "name": "probability",
                                                    "type": "number",
                                                    "label": "Probability",
                                                    "required": true,
                                                    "validate": {
                                                        "max": 100,
                                                        "min": -100
                                                    }
                                                }
                                            ],
                                            "type": "collection",
                                            "label": "Token Probability"
                                        },
                                        "type": "array",
                                        "label": "Token Probability"
                                    },
                                    {
                                        "name": "seed",
                                        "type": "integer",
                                        "label": "Seed"
                                    },
                                    {
                                        "name": "stop",
                                        "spec": {
                                            "name": "value",
                                            "type": "text",
                                            "label": "Stop Sequence"
                                        },
                                        "type": "array",
                                        "label": "Stop Sequences",
                                        "validate": {
                                            "maxItems": 4
                                        }
                                    },
                                    {
                                        "name": "additionalParameters",
                                        "spec": {
                                            "name": "value",
                                            "spec": [
                                                {
                                                    "name": "key",
                                                    "type": "text",
                                                    "label": "Parameter Name",
                                                    "required": true
                                                },
                                                {
                                                    "name": "type",
                                                    "type": "select",
                                                    "label": "Input Type",
                                                    "options": [
                                                        {
                                                            "label": "Text",
                                                            "value": "text",
                                                            "nested": [
                                                                {
                                                                    "name": "value",
                                                                    "type": "text",
                                                                    "label": "Parameter Value"
                                                                }
                                                            ],
                                                            "default": true
                                                        },
                                                        {
                                                            "label": "Number",
                                                            "value": "number",
                                                            "nested": [
                                                                {
                                                                    "name": "value",
                                                                    "type": "number",
                                                                    "label": "Parameter Value"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "label": "Boolean",
                                                            "value": "boolean",
                                                            "nested": [
                                                                {
                                                                    "name": "value",
                                                                    "type": "boolean",
                                                                    "label": "Parameter Value"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "label": "Date",
                                                            "value": "date",
                                                            "nested": [
                                                                {
                                                                    "name": "value",
                                                                    "type": "date",
                                                                    "label": "Parameter Value"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "label": "Any",
                                                            "value": "any",
                                                            "nested": [
                                                                {
                                                                    "name": "value",
                                                                    "type": "any",
                                                                    "label": "Parameter Value"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "type": "collection",
                                            "label": "Input Parameter"
                                        },
                                        "type": "array",
                                        "label": "Other Input Parameters"
                                    },
                                    {
                                        "name": "model",
                                        "type": "select",
                                        "label": "Model",
                                        "required": true
                                    },
                                    {
                                        "name": "max_tokens",
                                        "type": "uinteger",
                                        "label": "Max Completion Tokens"
                                    },
                                    {
                                        "name": "messages",
                                        "spec": {
                                            "name": "value",
                                            "spec": [
                                                {
                                                    "name": "role",
                                                    "type": "select",
                                                    "label": "Role",
                                                    "options": {
                                                        "store": [
                                                            {
                                                                "label": "Developer / System",
                                                                "value": "system",
                                                                "nested": [
                                                                    {
                                                                        "help": "Text content of the message on behalf of the selected __Role__.",
                                                                        "name": "content",
                                                                        "type": "text",
                                                                        "label": "Text Content"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "label": "User",
                                                                "value": "user",
                                                                "nested": [
                                                                    {
                                                                        "help": "Text content of the message on behalf of the selected __Role__.",
                                                                        "name": "content",
                                                                        "type": "text",
                                                                        "label": "Text Content"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "label": "Assistant",
                                                                "value": "assistant",
                                                                "nested": [
                                                                    {
                                                                        "help": "Text content of the message on behalf of the selected __Role__.",
                                                                        "name": "content",
                                                                        "type": "text",
                                                                        "label": "Text Content"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "required": true
                                                }
                                            ],
                                            "type": "collection",
                                            "label": "Message"
                                        },
                                        "type": "array",
                                        "label": "Messages",
                                        "required": true
                                    },
                                    {
                                        "name": "response_format",
                                        "type": "select",
                                        "label": "Response Format",
                                        "validate": {
                                            "enum": [
                                                "text",
                                                "json_object"
                                            ]
                                        }
                                    }
                                ],
                                "interface": [
                                    {
                                        "name": "result",
                                        "type": "any",
                                        "label": "Result"
                                    },
                                    {
                                        "name": "id",
                                        "type": "text",
                                        "label": "ID"
                                    },
                                    {
                                        "name": "object",
                                        "type": "text",
                                        "label": "Object"
                                    },
                                    {
                                        "name": "created",
                                        "type": "date",
                                        "label": "Created"
                                    },
                                    {
                                        "name": "model",
                                        "type": "text",
                                        "label": "Model"
                                    },
                                    {
                                        "name": "choices",
                                        "spec": {
                                            "spec": [
                                                {
                                                    "name": "text",
                                                    "type": "text",
                                                    "label": "Text"
                                                },
                                                {
                                                    "name": "index",
                                                    "type": "number",
                                                    "label": "Index"
                                                },
                                                {
                                                    "name": "logprobs",
                                                    "type": "text",
                                                    "label": "Log Probs"
                                                },
                                                {
                                                    "name": "finish_reason",
                                                    "type": "text",
                                                    "label": "Finish Reason"
                                                },
                                                {
                                                    "name": "message",
                                                    "spec": [
                                                        {
                                                            "name": "role",
                                                            "type": "text",
                                                            "label": "Role"
                                                        },
                                                        {
                                                            "name": "content",
                                                            "type": "text",
                                                            "label": "Content"
                                                        },
                                                        {
                                                            "name": "refusal",
                                                            "type": "text",
                                                            "label": "Refusal"
                                                        }
                                                    ],
                                                    "type": "collection",
                                                    "label": "Message"
                                                }
                                            ],
                                            "type": "collection"
                                        },
                                        "type": "array",
                                        "label": "Choices"
                                    },
                                    {
                                        "name": "usage",
                                        "spec": [
                                            {
                                                "name": "prompt_tokens",
                                                "type": "number",
                                                "label": "Prompt Tokens"
                                            },
                                            {
                                                "name": "completion_tokens",
                                                "type": "text",
                                                "label": "Completion Tokens"
                                            },
                                            {
                                                "name": "total_tokens",
                                                "type": "number",
                                                "label": "Total Tokens"
                                            },
                                            {
                                                "name": "prompt_tokens_details",
                                                "spec": [
                                                    {
                                                        "name": "cached_tokens",
                                                        "type": "uinteger",
                                                        "label": "Cached Tokens"
                                                    },
                                                    {
                                                        "name": "text_tokens",
                                                        "type": "uinteger",
                                                        "label": "Text Tokens"
                                                    },
                                                    {
                                                        "name": "image_tokens",
                                                        "type": "uinteger",
                                                        "label": "Image Tokens"
                                                    },
                                                    {
                                                        "name": "audio_tokens",
                                                        "type": "uinteger",
                                                        "label": "Audio Tokens"
                                                    }
                                                ],
                                                "type": "collection",
                                                "label": "Prompt Tokens Details"
                                            },
                                            {
                                                "name": "completion_tokens_details",
                                                "spec": [
                                                    {
                                                        "name": "reasoning_tokens",
                                                        "type": "uinteger",
                                                        "label": "Reasoning Tokens"
                                                    },
                                                    {
                                                        "name": "text_tokens",
                                                        "type": "uinteger",
                                                        "label": "Text Tokens"
                                                    },
                                                    {
                                                        "name": "audio_tokens",
                                                        "type": "uinteger",
                                                        "label": "Audio Tokens"
                                                    },
                                                    {
                                                        "name": "accepted_prediction_tokens",
                                                        "type": "uinteger",
                                                        "label": "Accepted Prediction Tokens"
                                                    },
                                                    {
                                                        "name": "rejected_prediction_tokens",
                                                        "type": "uinteger",
                                                        "label": "Rejected Prediction Tokens"
                                                    }
                                                ],
                                                "type": "collection",
                                                "label": "Completion Tokens Details"
                                            }
                                        ],
                                        "type": "collection",
                                        "label": "Usage"
                                    },
                                    {
                                        "name": "system_fingerprint",
                                        "type": "text",
                                        "label": "System Fingerprint"
                                    }
                                ]
                            }
                        },
                        {
                            "id": 25,
                            "module": "openai-gpt-3:transformTextToStructuredData",
                            "version": 1,
                            "parameters": {
                                "__IMTCONN__": 3509850
                            },
                            "mapper": {
                                "model": "gpt-4o",
                                "prompt": "You are an expert data extractor. You will be provided with a call transcript and must extract structured data according to the provided JSON schema. The appointmentDate field represents the date the user selected to book the meeting. Please leave the value empty if they don't exist  Your output must strictly be the JSON object—no additional text, explanations, or formatting like \"here is the JSON\" or \"json:\" before or after the JSON object. Again Do not use the value examples please  leave the value empty if they don't exist\n  \"structuredDataSchema\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"name\": { \"type\": \"string\" },\n      \"email\": { \"type\": \"string\" },\n      \"appointmentDate\": { \"type\": \"string\" }\n    },\n    \"required\": [\"name\", \"email\", \"appointmentDate\"]\n  }\n}\n\n​",
                                "rawText": "call transcript : {{2.message.transcript}}",
                                "parameters": [
                                    {
                                        "name": "name",
                                        "type": "string",
                                        "isRequired": true,
                                        "description": "the name of the caller"
                                    },
                                    {
                                        "name": "email",
                                        "type": "string",
                                        "isRequired": false,
                                        "description": "the email the caller gives"
                                    },
                                    {
                                        "name": "appointmentDate",
                                        "type": "string",
                                        "isRequired": false,
                                        "description": "the date the user picked which you will put in ISO 8601 format"
                                    }
                                ]
                            },
                            "metadata": {
                                "designer": {
                                    "x": 1995,
                                    "y": -486
                                },
                                "restore": {
                                    "expect": {
                                        "model": {
                                            "mode": "chose",
                                            "label": "gpt-4o (system)"
                                        },
                                        "parameters": {
                                            "mode": "chose",
                                            "items": [
                                                {
                                                    "type": {
                                                        "mode": "chose",
                                                        "label": "Text"
                                                    },
                                                    "isRequired": {
                                                        "mode": "chose"
                                                    },
                                                    "valueExamples": {
                                                        "mode": "chose"
                                                    }
                                                },
                                                {
                                                    "type": {
                                                        "mode": "chose",
                                                        "label": "Text"
                                                    },
                                                    "isRequired": {
                                                        "mode": "chose"
                                                    },
                                                    "valueExamples": {
                                                        "mode": "chose"
                                                    }
                                                },
                                                {
                                                    "type": {
                                                        "mode": "chose",
                                                        "label": "Text"
                                                    },
                                                    "isRequired": {
                                                        "mode": "chose"
                                                    },
                                                    "valueExamples": {
                                                        "mode": "chose"
                                                    }
                                                }
                                            ]
                                        },
                                        "objectDefinitions": {
                                            "mode": "chose"
                                        }
                                    },
                                    "parameters": {
                                        "__IMTCONN__": {
                                            "data": {
                                                "scoped": "true",
                                                "connection": "openai-gpt-3"
                                            },
                                            "label": "My OpenAI connection"
                                        }
                                    }
                                },
                                "parameters": [
                                    {
                                        "name": "__IMTCONN__",
                                        "type": "account:openai-gpt-3",
                                        "label": "Connection",
                                        "required": true
                                    }
                                ],
                                "expect": [
                                    {
                                        "name": "model",
                                        "type": "select",
                                        "label": "Model",
                                        "required": true
                                    },
                                    {
                                        "name": "rawText",
                                        "type": "text",
                                        "label": "Text to Parse",
                                        "required": true
                                    },
                                    {
                                        "name": "prompt",
                                        "type": "text",
                                        "label": "Prompt",
                                        "required": true
                                    },
                                    {
                                        "name": "parameters",
                                        "spec": {
                                            "name": "value",
                                            "spec": [],
                                            "type": "collection",
                                            "label": "Data Definition"
                                        },
                                        "type": "array",
                                        "label": "Structured Data Definition",
                                        "required": true
                                    },
                                    {
                                        "name": "objectDefinitions",
                                        "spec": {
                                            "name": "value",
                                            "spec": [
                                                {
                                                    "name": "name",
                                                    "type": "text",
                                                    "label": "Object Name",
                                                    "required": true
                                                },
                                                {
                                                    "name": "description",
                                                    "type": "text",
                                                    "label": "Description",
                                                    "required": true
                                                },
                                                {
                                                    "name": "properties",
                                                    "spec": {
                                                        "spec": [],
                                                        "type": "collection",
                                                        "label": "Property"
                                                    },
                                                    "type": "array",
                                                    "label": "Properties",
                                                    "labels": {
                                                        "add": "Add property"
                                                    },
                                                    "required": true
                                                }
                                            ],
                                            "type": "collection",
                                            "label": "Object Definition"
                                        },
                                        "type": "array",
                                        "label": "Object Definitions"
                                    }
                                ],
                                "interface": [
                                    {
                                        "name": "name",
                                        "type": "text"
                                    },
                                    {
                                        "name": "email",
                                        "type": "text"
                                    },
                                    {
                                        "name": "appointmentDate",
                                        "type": "text"
                                    }
                                ]
                            }
                        },
                        {
                            "id": 14,
                            "module": "google-sheets:addRow",
                            "version": 2,
                            "parameters": {
                                "__IMTCONN__": 3386872
                            },
                            "mapper": {
                                "from": "drive",
                                "mode": "select",
                                "values": {
                                    "0": "{{25.name}}",
                                    "1": "'{{2.message.customer.number}}",
                                    "2": "{{25.email}}",
                                    "3": "{{2.message.transcript}}",
                                    "4": "{{22.result}}",
                                    "5": "{{25.appointmentDate}}"
                                },
                                "sheetId": "Sheet1",
                                "spreadsheetId": "/1XgVSLFBqrLkQMuR8-L_ZFf0GduL3ael4oxTSHZcYYKk",
                                "includesHeaders": true,
                                "insertDataOption": "INSERT_ROWS",
                                "valueInputOption": "USER_ENTERED",
                                "insertUnformatted": false
                            },
                            "metadata": {
                                "designer": {
                                    "x": 3133,
                                    "y": -744
                                },
                                "restore": {
                                    "expect": {
                                        "from": {
                                            "label": "My Drive"
                                        },
                                        "mode": {
                                            "label": "Search by path"
                                        },
                                        "sheetId": {
                                            "label": "Sheet1"
                                        },
                                        "spreadsheetId": {
                                            "path": [
                                                "Lead Database"
                                            ]
                                        },
                                        "includesHeaders": {
                                            "label": "Yes",
                                            "nested": [
                                                {
                                                    "name": "values",
                                                    "spec": [
                                                        {
                                                            "name": "0",
                                                            "type": "text",
                                                            "label": "Name  (A)"
                                                        },
                                                        {
                                                            "name": "1",
                                                            "type": "text",
                                                            "label": "Phone Number  (B)"
                                                        },
                                                        {
                                                            "name": "2",
                                                            "type": "text",
                                                            "label": "email (C)"
                                                        },
                                                        {
                                                            "name": "3",
                                                            "type": "text",
                                                            "label": "Transcript  (D)"
                                                        },
                                                        {
                                                            "name": "4",
                                                            "type": "text",
                                                            "label": "Call Summary  (E)"
                                                        },
                                                        {
                                                            "name": "5",
                                                            "type": "text",
                                                            "label": "Appoiment Date  (F)"
                                                        },
                                                        {
                                                            "name": "6",
                                                            "type": "text",
                                                            "label": "(G)"
                                                        },
                                                        {
                                                            "name": "7",
                                                            "type": "text",
                                                            "label": "(H)"
                                                        },
                                                        {
                                                            "name": "8",
                                                            "type": "text",
                                                            "label": "(I)"
                                                        },
                                                        {
                                                            "name": "9",
                                                            "type": "text",
                                                            "label": "(J)"
                                                        },
                                                        {
                                                            "name": "10",
                                                            "type": "text",
                                                            "label": "(K)"
                                                        },
                                                        {
                                                            "name": "11",
                                                            "type": "text",
                                                            "label": "(L)"
                                                        },
                                                        {
                                                            "name": "12",
                                                            "type": "text",
                                                            "label": "(M)"
                                                        },
                                                        {
                                                            "name": "13",
                                                            "type": "text",
                                                            "label": "(N)"
                                                        },
                                                        {
                                                            "name": "14",
                                                            "type": "text",
                                                            "label": "(O)"
                                                        },
                                                        {
                                                            "name": "15",
                                                            "type": "text",
                                                            "label": "(P)"
                                                        },
                                                        {
                                                            "name": "16",
                                                            "type": "text",
                                                            "label": "(Q)"
                                                        },
                                                        {
                                                            "name": "17",
                                                            "type": "text",
                                                            "label": "(R)"
                                                        },
                                                        {
                                                            "name": "18",
                                                            "type": "text",
                                                            "label": "(S)"
                                                        },
                                                        {
                                                            "name": "19",
                                                            "type": "text",
                                                            "label": "(T)"
                                                        },
                                                        {
                                                            "name": "20",
                                                            "type": "text",
                                                            "label": "(U)"
                                                        },
                                                        {
                                                            "name": "21",
                                                            "type": "text",
                                                            "label": "(V)"
                                                        },
                                                        {
                                                            "name": "22",
                                                            "type": "text",
                                                            "label": "(W)"
                                                        },
                                                        {
                                                            "name": "23",
                                                            "type": "text",
                                                            "label": "(X)"
                                                        },
                                                        {
                                                            "name": "24",
                                                            "type": "text",
                                                            "label": "(Y)"
                                                        },
                                                        {
                                                            "name": "25",
                                                            "type": "text",
                                                            "label": "(Z)"
                                                        }
                                                    ],
                                                    "type": "collection",
                                                    "label": "Values"
                                                }
                                            ]
                                        },
                                        "insertDataOption": {
                                            "mode": "chose",
                                            "label": "Insert rows"
                                        },
                                        "valueInputOption": {
                                            "mode": "chose",
                                            "label": "User entered"
                                        },
                                        "insertUnformatted": {
                                            "mode": "chose"
                                        }
                                    },
                                    "parameters": {
                                        "__IMTCONN__": {
                                            "data": {
                                                "scoped": "true",
                                                "connection": "google"
                                            },
                                            "label": "My Google connection (alozie2k@gmail.com)"
                                        }
                                    }
                                },
                                "parameters": [
                                    {
                                        "name": "__IMTCONN__",
                                        "type": "account:google",
                                        "label": "Connection",
                                        "required": true
                                    }
                                ],
                                "expect": [
                                    {
                                        "name": "mode",
                                        "type": "select",
                                        "label": "Search Method",
                                        "required": true,
                                        "validate": {
                                            "enum": [
                                                "select",
                                                "fromAll",
                                                "map"
                                            ]
                                        }
                                    },
                                    {
                                        "name": "insertUnformatted",
                                        "type": "boolean",
                                        "label": "Unformatted",
                                        "required": true
                                    },
                                    {
                                        "name": "valueInputOption",
                                        "type": "select",
                                        "label": "Value input option",
                                        "validate": {
                                            "enum": [
                                                "USER_ENTERED",
                                                "RAW"
                                            ]
                                        }
                                    },
                                    {
                                        "name": "insertDataOption",
                                        "type": "select",
                                        "label": "Insert data option",
                                        "validate": {
                                            "enum": [
                                                "INSERT_ROWS",
                                                "OVERWRITE"
                                            ]
                                        }
                                    },
                                    {
                                        "name": "from",
                                        "type": "select",
                                        "label": "Drive",
                                        "required": true,
                                        "validate": {
                                            "enum": [
                                                "drive",
                                                "share",
                                                "team"
                                            ]
                                        }
                                    },
                                    {
                                        "name": "spreadsheetId",
                                        "type": "file",
                                        "label": "Spreadsheet ID",
                                        "required": true
                                    },
                                    {
                                        "name": "sheetId",
                                        "type": "select",
                                        "label": "Sheet Name",
                                        "required": true
                                    },
                                    {
                                        "name": "includesHeaders",
                                        "type": "select",
                                        "label": "Table contains headers",
                                        "required": true,
                                        "validate": {
                                            "enum": [
                                                true,
                                                false
                                            ]
                                        }
                                    },
                                    {
                                        "name": "values",
                                        "spec": [
                                            {
                                                "name": "0",
                                                "type": "text",
                                                "label": "Name  (A)"
                                            },
                                            {
                                                "name": "1",
                                                "type": "text",
                                                "label": "Phone Number  (B)"
                                            },
                                            {
                                                "name": "2",
                                                "type": "text",
                                                "label": "email (C)"
                                            },
                                            {
                                                "name": "3",
                                                "type": "text",
                                                "label": "Transcript  (D)"
                                            },
                                            {
                                                "name": "4",
                                                "type": "text",
                                                "label": "Call Summary  (E)"
                                            },
                                            {
                                                "name": "5",
                                                "type": "text",
                                                "label": "Appoiment Date  (F)"
                                            },
                                            {
                                                "name": "6",
                                                "type": "text",
                                                "label": "(G)"
                                            },
                                            {
                                                "name": "7",
                                                "type": "text",
                                                "label": "(H)"
                                            },
                                            {
                                                "name": "8",
                                                "type": "text",
                                                "label": "(I)"
                                            },
                                            {
                                                "name": "9",
                                                "type": "text",
                                                "label": "(J)"
                                            },
                                            {
                                                "name": "10",
                                                "type": "text",
                                                "label": "(K)"
                                            },
                                            {
                                                "name": "11",
                                                "type": "text",
                                                "label": "(L)"
                                            },
                                            {
                                                "name": "12",
                                                "type": "text",
                                                "label": "(M)"
                                            },
                                            {
                                                "name": "13",
                                                "type": "text",
                                                "label": "(N)"
                                            },
                                            {
                                                "name": "14",
                                                "type": "text",
                                                "label": "(O)"
                                            },
                                            {
                                                "name": "15",
                                                "type": "text",
                                                "label": "(P)"
                                            },
                                            {
                                                "name": "16",
                                                "type": "text",
                                                "label": "(Q)"
                                            },
                                            {
                                                "name": "17",
                                                "type": "text",
                                                "label": "(R)"
                                            },
                                            {
                                                "name": "18",
                                                "type": "text",
                                                "label": "(S)"
                                            },
                                            {
                                                "name": "19",
                                                "type": "text",
                                                "label": "(T)"
                                            },
                                            {
                                                "name": "20",
                                                "type": "text",
                                                "label": "(U)"
                                            },
                                            {
                                                "name": "21",
                                                "type": "text",
                                                "label": "(V)"
                                            },
                                            {
                                                "name": "22",
                                                "type": "text",
                                                "label": "(W)"
                                            },
                                            {
                                                "name": "23",
                                                "type": "text",
                                                "label": "(X)"
                                            },
                                            {
                                                "name": "24",
                                                "type": "text",
                                                "label": "(Y)"
                                            },
                                            {
                                                "name": "25",
                                                "type": "text",
                                                "label": "(Z)"
                                            }
                                        ],
                                        "type": "collection",
                                        "label": "Values"
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "flow": [
                        {
                            "id": 15,
                            "module": "google-sheets:filterRows",
                            "version": 2,
                            "parameters": {
                                "__IMTCONN__": 3386872
                            },
                            "filter": {
                                "name": "startcall-route",
                                "conditions": [
                                    [
                                        {
                                            "a": "{{2.message.call.status}}",
                                            "b": "ringing",
                                            "o": "text:contain"
                                        }
                                    ]
                                ]
                            },
                            "mapper": {
                                "from": "drive",
                                "filter": [
                                    [
                                        {
                                            "a": "B",
                                            "b": "{{2.message.customer.number}}",
                                            "o": "text:equal"
                                        }
                                    ]
                                ],
                                "sheetId": "Sheet1",
                                "sortOrder": "asc",
                                "spreadsheetId": "1XgVSLFBqrLkQMuR8-L_ZFf0GduL3ael4oxTSHZcYYKk",
                                "tableFirstRow": "A1:CZ1",
                                "includesHeaders": true,
                                "valueRenderOption": "FORMATTED_VALUE",
                                "dateTimeRenderOption": "FORMATTED_STRING"
                            },
                            "metadata": {
                                "designer": {
                                    "x": 1128,
                                    "y": 372
                                },
                                "restore": {
                                    "expect": {
                                        "from": {
                                            "label": "Select from My Drive"
                                        },
                                        "orderBy": {
                                            "mode": "chose"
                                        },
                                        "sheetId": {
                                            "mode": "chose",
                                            "label": "Sheet1"
                                        },
                                        "sortOrder": {
                                            "mode": "chose",
                                            "label": "Ascending"
                                        },
                                        "spreadsheetId": {
                                            "mode": "chose",
                                            "label": "Lead Database"
                                        },
                                        "tableFirstRow": {
                                            "label": "A-CZ"
                                        },
                                        "includesHeaders": {
                                            "mode": "chose",
                                            "label": "Yes"
                                        },
                                        "valueRenderOption": {
                                            "mode": "chose",
                                            "label": "Formatted value"
                                        },
                                        "dateTimeRenderOption": {
                                            "mode": "chose",
                                            "label": "Formatted string"
                                        }
                                    },
                                    "parameters": {
                                        "__IMTCONN__": {
                                            "data": {
                                                "scoped": "true",
                                                "connection": "google"
                                            },
                                            "label": "My Google connection (alozie2k@gmail.com)"
                                        }
                                    }
                                },
                                "parameters": [
                                    {
                                        "name": "__IMTCONN__",
                                        "type": "account:google",
                                        "label": "Connection",
                                        "required": true
                                    }
                                ],
                                "expect": [
                                    {
                                        "name": "from",
                                        "type": "select",
                                        "label": "Search Method",
                                        "required": true,
                                        "validate": {
                                            "enum": [
                                                "drive",
                                                "share"
                                            ]
                                        }
                                    },
                                    {
                                        "name": "valueRenderOption",
                                        "type": "select",
                                        "label": "Value render option",
                                        "validate": {
                                            "enum": [
                                                "FORMATTED_VALUE",
                                                "UNFORMATTED_VALUE",
                                                "FORMULA"
                                            ]
                                        }
                                    },
                                    {
                                        "name": "dateTimeRenderOption",
                                        "type": "select",
                                        "label": "Date and time render option",
                                        "validate": {
                                            "enum": [
                                                "SERIAL_NUMBER",
                                                "FORMATTED_STRING"
                                            ]
                                        }
                                    },
                                    {
                                        "name": "limit",
                                        "type": "uinteger",
                                        "label": "Limit"
                                    },
                                    {
                                        "name": "spreadsheetId",
                                        "type": "select",
                                        "label": "Spreadsheet ID",
                                        "required": true
                                    },
                                    {
                                        "name": "sheetId",
                                        "type": "select",
                                        "label": "Sheet Name",
                                        "required": true
                                    },
                                    {
                                        "name": "includesHeaders",
                                        "type": "select",
                                        "label": "Table contains headers",
                                        "required": true,
                                        "validate": {
                                            "enum": [
                                                true,
                                                false
                                            ]
                                        }
                                    },
                                    {
                                        "name": "tableFirstRow",
                                        "type": "select",
                                        "label": "Column range",
                                        "required": true,
                                        "validate": {
                                            "enum": [
                                                "A1:Z1",
                                                "A1:BZ1",
                                                "A1:CZ1",
                                                "A1:DZ1",
                                                "A1:MZ1",
                                                "A1:ZZ1",
                                                "A1:AZZ1",
                                                "A1:BZZ1",
                                                "A1:CZZ1",
                                                "A1:DZZ1",
                                                "A1:MZZ1",
                                                "A1:ZZZ1"
                                            ]
                                        }
                                    },
                                    {
                                        "name": "filter",
                                        "type": "filter",
                                        "label": "Filter",
                                        "options": "rpc://google-sheets/2/rpcGetFilterKeys?includesHeaders=true"
                                    },
                                    {
                                        "name": "orderBy",
                                        "type": "select",
                                        "label": "Order by"
                                    },
                                    {
                                        "name": "sortOrder",
                                        "type": "select",
                                        "label": "Sort order",
                                        "validate": {
                                            "enum": [
                                                "asc",
                                                "desc"
                                            ]
                                        }
                                    }
                                ],
                                "interface": [
                                    {
                                        "name": "__IMTLENGTH__",
                                        "type": "uinteger",
                                        "label": "Total number of bundles"
                                    },
                                    {
                                        "name": "__IMTINDEX__",
                                        "type": "uinteger",
                                        "label": "Bundle order position"
                                    },
                                    {
                                        "name": "__ROW_NUMBER__",
                                        "type": "number",
                                        "label": "Row number"
                                    },
                                    {
                                        "name": "__SPREADSHEET_ID__",
                                        "type": "text",
                                        "label": "Spreadsheet ID"
                                    },
                                    {
                                        "name": "__SHEET__",
                                        "type": "text",
                                        "label": "Sheet"
                                    },
                                    {
                                        "name": "0",
                                        "type": "text",
                                        "label": "Name  (A)"
                                    },
                                    {
                                        "name": "1",
                                        "type": "text",
                                        "label": "Phone Number  (B)"
                                    },
                                    {
                                        "name": "2",
                                        "type": "text",
                                        "label": "email (C)"
                                    },
                                    {
                                        "name": "3",
                                        "type": "text",
                                        "label": "Transcript  (D)"
                                    },
                                    {
                                        "name": "4",
                                        "type": "text",
                                        "label": "Call Summary  (E)"
                                    },
                                    {
                                        "name": "5",
                                        "type": "text",
                                        "label": "Appoiment Date  (F)"
                                    },
                                    {
                                        "name": "6",
                                        "type": "text",
                                        "label": "(G)"
                                    },
                                    {
                                        "name": "7",
                                        "type": "text",
                                        "label": "(H)"
                                    },
                                    {
                                        "name": "8",
                                        "type": "text",
                                        "label": "(I)"
                                    },
                                    {
                                        "name": "9",
                                        "type": "text",
                                        "label": "(J)"
                                    },
                                    {
                                        "name": "10",
                                        "type": "text",
                                        "label": "(K)"
                                    },
                                    {
                                        "name": "11",
                                        "type": "text",
                                        "label": "(L)"
                                    },
                                    {
                                        "name": "12",
                                        "type": "text",
                                        "label": "(M)"
                                    },
                                    {
                                        "name": "13",
                                        "type": "text",
                                        "label": "(N)"
                                    },
                                    {
                                        "name": "14",
                                        "type": "text",
                                        "label": "(O)"
                                    },
                                    {
                                        "name": "15",
                                        "type": "text",
                                        "label": "(P)"
                                    },
                                    {
                                        "name": "16",
                                        "type": "text",
                                        "label": "(Q)"
                                    },
                                    {
                                        "name": "17",
                                        "type": "text",
                                        "label": "(R)"
                                    },
                                    {
                                        "name": "18",
                                        "type": "text",
                                        "label": "(S)"
                                    },
                                    {
                                        "name": "19",
                                        "type": "text",
                                        "label": "(T)"
                                    },
                                    {
                                        "name": "20",
                                        "type": "text",
                                        "label": "(U)"
                                    },
                                    {
                                        "name": "21",
                                        "type": "text",
                                        "label": "(V)"
                                    },
                                    {
                                        "name": "22",
                                        "type": "text",
                                        "label": "(W)"
                                    },
                                    {
                                        "name": "23",
                                        "type": "text",
                                        "label": "(X)"
                                    },
                                    {
                                        "name": "24",
                                        "type": "text",
                                        "label": "(Y)"
                                    },
                                    {
                                        "name": "25",
                                        "type": "text",
                                        "label": "(Z)"
                                    },
                                    {
                                        "name": "26",
                                        "type": "text",
                                        "label": "(AA)"
                                    },
                                    {
                                        "name": "27",
                                        "type": "text",
                                        "label": "(AB)"
                                    },
                                    {
                                        "name": "28",
                                        "type": "text",
                                        "label": "(AC)"
                                    },
                                    {
                                        "name": "29",
                                        "type": "text",
                                        "label": "(AD)"
                                    },
                                    {
                                        "name": "30",
                                        "type": "text",
                                        "label": "(AE)"
                                    },
                                    {
                                        "name": "31",
                                        "type": "text",
                                        "label": "(AF)"
                                    },
                                    {
                                        "name": "32",
                                        "type": "text",
                                        "label": "(AG)"
                                    },
                                    {
                                        "name": "33",
                                        "type": "text",
                                        "label": "(AH)"
                                    },
                                    {
                                        "name": "34",
                                        "type": "text",
                                        "label": "(AI)"
                                    },
                                    {
                                        "name": "35",
                                        "type": "text",
                                        "label": "(AJ)"
                                    },
                                    {
                                        "name": "36",
                                        "type": "text",
                                        "label": "(AK)"
                                    },
                                    {
                                        "name": "37",
                                        "type": "text",
                                        "label": "(AL)"
                                    },
                                    {
                                        "name": "38",
                                        "type": "text",
                                        "label": "(AM)"
                                    },
                                    {
                                        "name": "39",
                                        "type": "text",
                                        "label": "(AN)"
                                    },
                                    {
                                        "name": "40",
                                        "type": "text",
                                        "label": "(AO)"
                                    },
                                    {
                                        "name": "41",
                                        "type": "text",
                                        "label": "(AP)"
                                    },
                                    {
                                        "name": "42",
                                        "type": "text",
                                        "label": "(AQ)"
                                    },
                                    {
                                        "name": "43",
                                        "type": "text",
                                        "label": "(AR)"
                                    },
                                    {
                                        "name": "44",
                                        "type": "text",
                                        "label": "(AS)"
                                    },
                                    {
                                        "name": "45",
                                        "type": "text",
                                        "label": "(AT)"
                                    },
                                    {
                                        "name": "46",
                                        "type": "text",
                                        "label": "(AU)"
                                    },
                                    {
                                        "name": "47",
                                        "type": "text",
                                        "label": "(AV)"
                                    },
                                    {
                                        "name": "48",
                                        "type": "text",
                                        "label": "(AW)"
                                    },
                                    {
                                        "name": "49",
                                        "type": "text",
                                        "label": "(AX)"
                                    },
                                    {
                                        "name": "50",
                                        "type": "text",
                                        "label": "(AY)"
                                    },
                                    {
                                        "name": "51",
                                        "type": "text",
                                        "label": "(AZ)"
                                    },
                                    {
                                        "name": "52",
                                        "type": "text",
                                        "label": "(BA)"
                                    },
                                    {
                                        "name": "53",
                                        "type": "text",
                                        "label": "(BB)"
                                    },
                                    {
                                        "name": "54",
                                        "type": "text",
                                        "label": "(BC)"
                                    },
                                    {
                                        "name": "55",
                                        "type": "text",
                                        "label": "(BD)"
                                    },
                                    {
                                        "name": "56",
                                        "type": "text",
                                        "label": "(BE)"
                                    },
                                    {
                                        "name": "57",
                                        "type": "text",
                                        "label": "(BF)"
                                    },
                                    {
                                        "name": "58",
                                        "type": "text",
                                        "label": "(BG)"
                                    },
                                    {
                                        "name": "59",
                                        "type": "text",
                                        "label": "(BH)"
                                    },
                                    {
                                        "name": "60",
                                        "type": "text",
                                        "label": "(BI)"
                                    },
                                    {
                                        "name": "61",
                                        "type": "text",
                                        "label": "(BJ)"
                                    },
                                    {
                                        "name": "62",
                                        "type": "text",
                                        "label": "(BK)"
                                    },
                                    {
                                        "name": "63",
                                        "type": "text",
                                        "label": "(BL)"
                                    },
                                    {
                                        "name": "64",
                                        "type": "text",
                                        "label": "(BM)"
                                    },
                                    {
                                        "name": "65",
                                        "type": "text",
                                        "label": "(BN)"
                                    },
                                    {
                                        "name": "66",
                                        "type": "text",
                                        "label": "(BO)"
                                    },
                                    {
                                        "name": "67",
                                        "type": "text",
                                        "label": "(BP)"
                                    },
                                    {
                                        "name": "68",
                                        "type": "text",
                                        "label": "(BQ)"
                                    },
                                    {
                                        "name": "69",
                                        "type": "text",
                                        "label": "(BR)"
                                    },
                                    {
                                        "name": "70",
                                        "type": "text",
                                        "label": "(BS)"
                                    },
                                    {
                                        "name": "71",
                                        "type": "text",
                                        "label": "(BT)"
                                    },
                                    {
                                        "name": "72",
                                        "type": "text",
                                        "label": "(BU)"
                                    },
                                    {
                                        "name": "73",
                                        "type": "text",
                                        "label": "(BV)"
                                    },
                                    {
                                        "name": "74",
                                        "type": "text",
                                        "label": "(BW)"
                                    },
                                    {
                                        "name": "75",
                                        "type": "text",
                                        "label": "(BX)"
                                    },
                                    {
                                        "name": "76",
                                        "type": "text",
                                        "label": "(BY)"
                                    },
                                    {
                                        "name": "77",
                                        "type": "text",
                                        "label": "(BZ)"
                                    },
                                    {
                                        "name": "78",
                                        "type": "text",
                                        "label": "(CA)"
                                    },
                                    {
                                        "name": "79",
                                        "type": "text",
                                        "label": "(CB)"
                                    },
                                    {
                                        "name": "80",
                                        "type": "text",
                                        "label": "(CC)"
                                    },
                                    {
                                        "name": "81",
                                        "type": "text",
                                        "label": "(CD)"
                                    },
                                    {
                                        "name": "82",
                                        "type": "text",
                                        "label": "(CE)"
                                    },
                                    {
                                        "name": "83",
                                        "type": "text",
                                        "label": "(CF)"
                                    },
                                    {
                                        "name": "84",
                                        "type": "text",
                                        "label": "(CG)"
                                    },
                                    {
                                        "name": "85",
                                        "type": "text",
                                        "label": "(CH)"
                                    },
                                    {
                                        "name": "86",
                                        "type": "text",
                                        "label": "(CI)"
                                    },
                                    {
                                        "name": "87",
                                        "type": "text",
                                        "label": "(CJ)"
                                    },
                                    {
                                        "name": "88",
                                        "type": "text",
                                        "label": "(CK)"
                                    },
                                    {
                                        "name": "89",
                                        "type": "text",
                                        "label": "(CL)"
                                    },
                                    {
                                        "name": "90",
                                        "type": "text",
                                        "label": "(CM)"
                                    },
                                    {
                                        "name": "91",
                                        "type": "text",
                                        "label": "(CN)"
                                    },
                                    {
                                        "name": "92",
                                        "type": "text",
                                        "label": "(CO)"
                                    },
                                    {
                                        "name": "93",
                                        "type": "text",
                                        "label": "(CP)"
                                    },
                                    {
                                        "name": "94",
                                        "type": "text",
                                        "label": "(CQ)"
                                    },
                                    {
                                        "name": "95",
                                        "type": "text",
                                        "label": "(CR)"
                                    },
                                    {
                                        "name": "96",
                                        "type": "text",
                                        "label": "(CS)"
                                    },
                                    {
                                        "name": "97",
                                        "type": "text",
                                        "label": "(CT)"
                                    },
                                    {
                                        "name": "98",
                                        "type": "text",
                                        "label": "(CU)"
                                    },
                                    {
                                        "name": "99",
                                        "type": "text",
                                        "label": "(CV)"
                                    },
                                    {
                                        "name": "100",
                                        "type": "text",
                                        "label": "(CW)"
                                    },
                                    {
                                        "name": "101",
                                        "type": "text",
                                        "label": "(CX)"
                                    },
                                    {
                                        "name": "102",
                                        "type": "text",
                                        "label": "(CY)"
                                    },
                                    {
                                        "name": "103",
                                        "type": "text",
                                        "label": "(CZ)"
                                    }
                                ]
                            }
                        },
                        {
                            "id": 5,
                            "module": "calendly:makeApiCall",
                            "version": 2,
                            "parameters": {
                                "__IMTCONN__": 3787810
                            },
                            "mapper": {
                                "qs": [
                                    {
                                        "key": "event_type",
                                        "value": "https://api.calendly.com/event_types/216b1f6d-6f36-408a-8e90-3ea9c005d35b"
                                    },
                                    {
                                        "key": "end_time",
                                        "value": " {{formatDate(addDays(now; 6); \"YYYY-MM-DDT24:00:00.000000[Z]\")}}"
                                    },
                                    {
                                        "key": "start_time",
                                        "value": "{{formatDate(addDays(parseDate(now; \"MMMM D, YYYY h:mm A\"); 1); \"YYYY-MM-DDT24:00:00.000000[Z]\")}}"
                                    }
                                ],
                                "url": "https://api.calendly.com/event_type_available_times",
                                "method": "GET",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ]
                            },
                            "metadata": {
                                "designer": {
                                    "x": 2400,
                                    "y": -300
                                },
                                "restore": {
                                    "expect": {
                                        "qs": {
                                            "mode": "chose",
                                            "items": [
                                                null,
                                                null,
                                                null
                                            ]
                                        },
                                        "method": {
                                            "mode": "chose",
                                            "label": "GET"
                                        },
                                        "headers": {
                                            "mode": "chose",
                                            "items": [
                                                null
                                            ]
                                        }
                                    },
                                    "parameters": {
                                        "__IMTCONN__": {
                                            "data": {
                                                "scoped": "true",
                                                "connection": "calendly2"
                                            },
                                            "label": "My Calendly connection (alozie_igbokwe@arbitrageai.net)"
                                        }
                                    }
                                },
                                "parameters": [
                                    {
                                        "name": "__IMTCONN__",
                                        "type": "account:calendly2",
                                        "label": "Connection",
                                        "required": true
                                    }
                                ],
                                "expect": [
                                    {
                                        "name": "url",
                                        "type": "text",
                                        "label": "URL",
                                        "required": true
                                    },
                                    {
                                        "name": "method",
                                        "type": "select",
                                        "label": "Method",
                                        "required": true,
                                        "validate": {
                                            "enum": [
                                                "GET",
                                                "POST",
                                                "PUT",
                                                "PATCH",
                                                "DELETE"
                                            ]
                                        }
                                    },
                                    {
                                        "name": "headers",
                                        "spec": [
                                            {
                                                "name": "key",
                                                "type": "text",
                                                "label": "Key"
                                            },
                                            {
                                                "name": "value",
                                                "type": "text",
                                                "label": "Value"
                                            }
                                        ],
                                        "type": "array",
                                        "label": "Headers"
                                    },
                                    {
                                        "name": "qs",
                                        "spec": [
                                            {
                                                "name": "key",
                                                "type": "text",
                                                "label": "Key"
                                            },
                                            {
                                                "name": "value",
                                                "type": "text",
                                                "label": "Value"
                                            }
                                        ],
                                        "type": "array",
                                        "label": "Query String"
                                    },
                                    {
                                        "name": "body",
                                        "type": "any",
                                        "label": "Body"
                                    }
                                ]
                            }
                        },
                        {
                            "id": 10,
                            "module": "json:TransformToJSON",
                            "version": 1,
                            "parameters": {
                                "space": ""
                            },
                            "mapper": {
                                "object": "{{5.body.collection}}"
                            },
                            "metadata": {
                                "designer": {
                                    "x": 3900,
                                    "y": 0
                                },
                                "restore": {
                                    "parameters": {
                                        "space": {
                                            "label": "Empty"
                                        }
                                    }
                                },
                                "parameters": [
                                    {
                                        "name": "space",
                                        "type": "select",
                                        "label": "Indentation",
                                        "validate": {
                                            "enum": [
                                                "tab",
                                                "2",
                                                "4"
                                            ]
                                        }
                                    }
                                ],
                                "expect": [
                                    {
                                        "name": "object",
                                        "type": "any",
                                        "label": "Object"
                                    }
                                ]
                            }
                        },
                        {
                            "id": 11,
                            "module": "onesaas:codepython",
                            "version": 2,
                            "parameters": {
                                "__IMTCONN__": 3801663
                            },
                            "mapper": {
                                "pythonCode": "import json\nfrom datetime import datetime\nimport pytz\nimport phonenumbers\nfrom phonenumbers import timezone as ph_timezone\n\ndef adjust_time_to_caller_timezone(phone_number, input_json):\n    try:\n        # Determine the caller's timezone\n        parsed_number = phonenumbers.parse(phone_number)\n        timezones = ph_timezone.time_zones_for_number(parsed_number)\n        \n        # Default to UTC if no timezone is found\n        if not timezones:\n            caller_timezone = pytz.utc\n        else:\n            caller_timezone = pytz.timezone(timezones[0])  # Use the first timezone as the best fit\n\n        # Ensure the input JSON is parsed correctly\n        data = json.loads(input_json)  # Directly parse the JSON string\n\n        # Format times dynamically\n        formatted_times = []\n        for entry in data:\n            utc_time = datetime.strptime(entry[\"start_time\"], \"%Y-%m-%dT%H:%M:%SZ\").replace(tzinfo=pytz.utc)\n            local_time = utc_time.astimezone(caller_timezone)\n\n            # Format the date and time\n            formatted_time = local_time.strftime(\"%b %d\") + (\n                \"th\" if 4 <= int(local_time.day) <= 20 or 24 <= int(local_time.day) <= 30 else\n                \"st\" if local_time.day in [1, 21, 31] else\n                \"nd\" if local_time.day in [2, 22] else\n                \"rd\"\n            )\n            formatted_time += local_time.strftime(\" %I:%M %p\").lower()  # Format the time\n            formatted_time += f\" {local_time.tzname()}\"  # Add timezone abbreviation\n\n            # Append formatted entry\n            formatted_times.append(formatted_time)\n\n        # Combine all times into a single string\n        return f\"Avaliable times: {', '.join(formatted_times)}\"\n\n    except phonenumbers.NumberParseException as e:\n        return f\"Error parsing phone number: {str(e)}\"\n    except Exception as e:\n        return f\"An unexpected error occurred: {str(e)}\"\n\n# Example Input\nphone_number = \"{{2.message.customer.number}}\"  # Replace with the caller's phone number\ninput_json = \"\"\"{{10.json}}\"\"\"\n\n# Adjust the times and print the result\nresult = adjust_time_to_caller_timezone(phone_number, input_json)\nprint(result)\n\n",
                                "requirements": [
                                    "phonenumbers ",
                                    "pytz"
                                ]
                            },
                            "metadata": {
                                "designer": {
                                    "x": 4200,
                                    "y": 0
                                },
                                "restore": {
                                    "expect": {
                                        "requirements": {
                                            "mode": "chose",
                                            "items": [
                                                null,
                                                null
                                            ]
                                        },
                                        "otherInputParameters": {
                                            "mode": "chose"
                                        }
                                    },
                                    "parameters": {
                                        "__IMTCONN__": {
                                            "data": {
                                                "scoped": "true",
                                                "connection": "onesaas2"
                                            },
                                            "label": "My 0-CodeKit connection"
                                        }
                                    }
                                },
                                "parameters": [
                                    {
                                        "name": "__IMTCONN__",
                                        "type": "account:onesaas2",
                                        "label": "Connection",
                                        "required": true
                                    }
                                ],
                                "expect": [
                                    {
                                        "name": "otherInputParameters",
                                        "spec": [
                                            {
                                                "name": "key",
                                                "type": "text",
                                                "label": "Key"
                                            },
                                            {
                                                "name": "value",
                                                "type": "any",
                                                "label": "Value"
                                            }
                                        ],
                                        "type": "array",
                                        "label": "Other Input Parameters"
                                    },
                                    {
                                        "name": "requirements",
                                        "spec": {
                                            "name": "value",
                                            "type": "text"
                                        },
                                        "type": "array",
                                        "label": "Requirements"
                                    },
                                    {
                                        "name": "pythonCode",
                                        "type": "text",
                                        "label": "Your Python Code",
                                        "required": true
                                    }
                                ]
                            }
                        },
                        {
                            "id": 7,
                            "module": "gateway:WebhookRespond",
                            "version": 1,
                            "parameters": {},
                            "mapper": {
                                "body": "{\n  \"assistant\" : {\n  \"name\": \"Calendly-AsssistantV2\",\n  \"voice\": {\n    \"model\": \"sonic-english\",\n    \"voiceId\": \"248be419-c632-4f23-adf1-5324ed7dbf1d\",\n    \"provider\": \"cartesia\",\n    \"fillerInjectionEnabled\": false\n  },\n  \"model\": {\n    \"model\": \"gpt-4o-mini\",\n    \"toolIds\": [\n      \"30a736d1-cb4d-4881-8561-52adf621ac6a\",\n      \"46deb5de-909e-4cd8-ac1e-626cc0a8e4b4\",\n      \"641f89b2-c34d-413a-9a1f-9df3c3edeab2\",\n      \"e291e5ed-4d32-4516-93a0-524882a46050\"\n    ],\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"**IMPORTANT INSTRUCTIONS(ALWAYS FOLLOW THEM)**\\n\\n\\nObjective: Your  AI Virtual  Voice Assistant who takes my business Inbound Calls and converse with leads and clients. When deciding what to say or output please base your output on the fact you are speaking to a person on call. Meaning dont output  or say that your calling a function or read out instructions live. Talk , output and say things a regular human would say.\\n\\nMy business offers AI Voice Consulting Services and our goal is too see what our clients or leads are calling about. \\n There categories are caller could call about is inquirying about our services(which will usually lead to book a meeting to learn more), or trying to either reschedule or cancel a meeting they booked previously. \\n\\n\\nDialogue:  Anything labled under instructions are example of things I want the AI to actually directly output or to say. The things i want AI to say will usually be in between quotes/””. Never state you are calling a function or repeat anything in brackets.\\n\\n\\n\\nInstructions: Anything labeled under Instructions are specific actions to be carried out by the AI\\n\\nAnything within curly braces {} in the dialogue example are just instructions, like when calling a function, etc.\\n\\nCall Function: Provides details on how the function should be called. The values and parameters given here are just examples. Please do not use the given parameter values when calling the function during the actual call. Whenever you see this section, do not repeat it during the call. This section informs you that you should call the function at that point.       \\n\\n\\nVariables :\\n\\nThis is information you will reference in call if needed. There wont always be information on caller. Please never make up the information. If the variable isnt assigned or reference to anything do not use it in any scenario. \\n\\nCaller’s name : {{15.`0`}} \\n\\nCurrent Booked Meeting : {{15.`5`}}\\n\\nEmail : {{15.`2`}}\\nLast Call  Summary: {{15.`4`}}\\n\\nCurrent Date : {{now}}\\n\\n\\n\\n\\n\\n\\nSTEP 1 \\n\\nIntroduction \\n\\n\\nIntroduce our AI Voice Consulting services engagingly and professionally, and gather details about on what they are specifically calling about. They might be calling because they are interested in our services or because they want to reschedule or cancel a specific meeting.\\n\\nIf the caller’s name is mentioned in the prompt with their Last call summary please reference those inside the introduction\\n\\n\\nDialogue Example 1 \\n\\n{if the callers name and last call summary is inside the prompt}\\n\\n{\\n\\nCaller’s name : Ryan Duke\\n\\nCurrent Booked Meeting : Decemebr 31, 2024, at 9:00 AM EST. \\n\\nEmail : duker@yahoo.com\\n\\nLast Call Summary: Ryan Duke was curious about the cost-effectiveness and reliability of AI voice agents compared to offshore call centers. He asked about potential savings and whether voice agents could handle high volumes reliably. I explained that voice agents offer lower operational costs, 24/7 availability, and are easy to scale without the need for additional staffing.\\nRyan Duke wanted more specifics, including a detailed cost comparison, reliability metrics, and how voice agents could integrate with his CRM. To address these points and provide tailored insights, we scheduled a meeting for December 31, 2024, at 9:00 AM EST.\\n}\\n\\nAI (you):\\n“Hi Ryan Duke! Welcome to ArbitrageAI Voice Consulting. How are you doing today?”\\nRyan:\\n“I’m doing good.”\\nAI (you):\\n“That’s great to hear! The last time we spoke, we discussed how AI voice agents could streamline your operations compared to offshore hiring, and we had planned to go over detailed cost comparisons and reliability metrics in our meeting on December 31. Is there anything new you’d like to address, or are you calling about something else today?”\\nRyan:\\n“Actually, I’d like to cancel the meeting. I’ve decided to stick with offshore hiring for now—we’re just not ready to explore AI solutions yet.\\n\\n\\nDialogue Example 1\\n{if the callers name and last call summary doesn't exist }\\n\\n{\\n\\nCaller’s name : \\n\\nCurrent Booked Meeting : \\n\\nEmail : \\n\\nLast Call Summary: \\n\\n}\\nAI (you):\\n“Hi there! Great to meet you. What inspired you to reach out to us today? Are you exploring AI voice solutions for your business, or do you have a specific project in mind?”\\nCaller:\\n“I’ve been thinking about automating our customer support. We get a lot of repetitive queries, and I’m wondering if AI voicebots could help.”\\nAI (you):\\n“That sounds really interesting! AI voicebots are fantastic for handling repetitive queries efficiently and freeing up your team for more complex tasks. Let me tell you a bit about what we offer—our voicebots can seamlessly manage customer support, provide 24/7 assistance, and even integrate with your existing systems.”\\nAI (you):\\n“The best part? We offer a free trial meeting where we can discuss your needs in detail and show you exactly how our solutions can work for your business. Would you be interested in setting that up?”\\nCaller:\\n“Yes, that sounds great!”\\n\\n\\nStep 2  Booking/Canceling/Rescheduling a Meeting  \\n\\n\\nInstructions: There will be three different scenarios that can happen in this step. The Caller might want to book a meeting, the caller might want to cancel a meeting and the user might want to reschedule a meeting.  The scenario will structure what functions you will call and what you will say. For each scenario only follow the instructions mentioned in that scenario  \\n\\n\\nScenario 1 Caller wants too or agree too book a meeting \\n\\n\\n\\nInstructions: \\n\\nYou choose this scenario if the Caller  wants to book a meeting or agrees to get a meeting booked\\n\\nInstructions Part 1: Capture User Name and Email\\n\\nCollecting Name:\\n\\nStart by asking for the user's first and last name.\\nPolitely request them to spell their first and last name clearly.\\n\\nCollecting Email:\\n\\nAsk the user for their email address and request that they spell it out for you.\\nEnsure you listen attentively, allowing the user to fully finish providing their email, especially common endings like “.com,” “.org,” or “.edu.”\\n\\nValidating Email:\\n\\nOnce you have the full email, use the email capture tool with the provided email as a parameter.\\nIf the tool returns a score of 100, confirm the email is valid and proceed to Part 2 to gather the user’s availability and schedule a meeting.\\n\\nHandling Invalid Email:\\n\\nIf the tool returns a score below 100, inform the user politely:\\n“Our system says the email may be invalid; I might have misheard something. Let me spell it back to confirm.”\\nSlowly spell out the email with clear pauses between letters (e.g., \\\"c - a - r\\\" for “car”).\\nAsk the user to confirm where the mistake might have occurred and provide the corrected spelling.\\n\\nRetry Validation:\\n\\nAfter receiving the corrected email, run the email capture tool again with the updated email.\\nRepeat the validation process:\\nAs soon as you get the response back from the function or tool..\\nIf the email is valid (score of 100), proceed to Part 2.\\nIf it’s still invalid, repeat the confirmation steps with the user until a valid email is captured.\\n\\nDialogue Example (dont not say anything in brackets or in call function section. Only say the things in quotes)- \\n\\nValid Email Scenario\\nAI: \\\"Hi! Can I have your first and last name, and your email address, please?\\\"\\nCaller: \\\"Sure, my name is Ryan Duke, and my email is ryand at example dot com.\\\"\\nAI: \\\"Thank you, Ryan. Could you spell your first name, last name, and email address for me?\\\"\\nCaller: \\\"Of course! It’s R-Y-A-N for Ryan, D-U-K-E for Duke, and my email is R-Y-A-N-D  at  example dot com.\\\"\\nAI: \\\"Got it! Let me validate your email.\\\"\\n\\n\\nCall Function(do not say say or output anything  in the brackets or Call function section. These are instructions for you to follow. Do not tell the caller you are calling the function or any details about the function ):\\n{ (call emailcapture function here) email: ryand@example.com }\\n{tool response: 100}\\n\\nAI: \\\"Thank you, Ryan. Your email has been validated. Let’s move on to scheduling your meeting. What time works best for you?\\\"\\n\\n\\nDialogue Example - Invalid Email Scenario\\nAI: \\\"Hi! Can I have your first and last name, and your email address, please?\\\"\\nCaller: \\\"Sure, my name is Ryan Duke, and my email is ryand at exemple dot com.\\\"\\nAI: \\\"Thank you, Ryan. Could you spell your first name, last name, and email address for me?\\\"\\nCaller: \\\"Of course! It’s R Y A N for Ryan, D U K E for Duke, and my email is R Y A N D at exemple dot com.\\\"\\nAI: \\\"Got it! Let me validate your email.\\\"\\nCall Function(do not say say or output anything  in the brackets or Call function section. These are instructions for you to follow. Do not tell the caller you are calling the function or any details about the function):\\n{ (call emailcapture function here) email: ryaned@exemple.com }\\n{tool response: 60}\\nAI: \\\"Our system says the email may be invalid. Let me spell it back to confirm: R - Y - A - N - E- D at  E - X - E - M - P - L - E  dot com. Did I mishear any part of the email?\\\"\\nCaller: \\\"Oh, I see!  Remove the e after the n  and change the e after x in example to A It’s just  supposed to be ryand at example dot com, R  Y N D not R Y N E D and E X A M P L E not E X E M P L E”\\nAI: \\\"Thanks for clarifying. Let me validate the corrected email.\\\"\\nCall Function(do not say say or output anything  in the brackets or Call function section. These are instructions for you to follow. Do not tell the caller you are calling the function or any details about the function) :\\n{ (call emailcapture function here) email: ryand@example.com }\\n{tool response: 100}\\nAI: \\\"Thank you, Ryan. Your email has been validated. Let’s move on to scheduling your meeting. What time works best for you?\\\"\\n\\n\\n\\n\\nInstructions Part 2 : Get Caller Availability and  Book Meeting \\n\\nAsk the user, \\\"When do you think you'll be most available?\\\" If they respond with something like \\\"two days from now\\\" or \\\"next week Wednesday,\\\" use the current date({{now}}) to determine the current date and calculate the corresponding date.\\nIf the specified date is unavailable, offer an alternative date with available times. Ask them, \\\"What time works best for you—morning, afternoon, or evening?\\\" Based on their preference, provide a few available time slots.\\nIf none of those times work, ask if they’re available in other time periods (e.g., \\\"Would evening or afternoon work instead?\\\"). If no suitable time is found for that day, ask for other days they might be available and repeat the process.\\nOnce the caller agrees on a time, call the BookMeeting function with their first name, last name, email, the meeting date and time they wanted to book a meeting and the reason for booking(the detailed reason that was  discussed during the call for booking a meeting). Right after you call the book meeting function please immediately , confirm the meeting and ask if there’s anything else they need.\\n\\nAvailable Dates and Times \\nYou will use the available dates  and times mentioned here  when giving availability :\\n{{11.result}}\\n\\n\\n\\n\\nIf no dates or times are mentioned, let them know and dont try to make up dates and times:\\n\\\"We currently have no availability this month, but we can text you once new time slots open up.\\\"\\n\\nDialogue Example\\nAI: \\\"When do you think you’ll be most available for the meeting?\\\"\\nCaller: \\\"How about two days from now?\\\"\\nAI: \\\"Got it. Let me check what’s available.\\\"\\n{current date: December 29, 2024 (this is just an example; the actual current date is mentioned in the instructions above)}\\n\\n\\nAI : \\\"Two days from now would be December 31, 2024. What time works best for you—morning, afternoon, or evening?\\\"\\nCaller: \\\"Afternoon works for me.\\\"\\nAI: \\\"Here are the available times in the afternoon: 2:00 PM, 3:30 PM, and 4:45 PM. Do any of these work for you?\\\"\\nCaller: \\\"Hmm, none of those times work.\\\"\\nAI: \\\"No problem. Would morning or evening on December 31 work better for you?\\\"\\nCaller: \\\"Evening could work. What do you have available then?\\\"\\nAI: \\\"In the evening, I have 6:00 PM and 7:15 PM. Do either of those times work?\\\"\\nCaller: \\\"7:15 PM works perfectly.\\\"\\nCall Function(do not say say or output anything  in the brackets or Call function section. These are instructions for you to follow. Do not tell the caller you are calling the function or any details about the function):\\n{ (call BookMeeting function here) firstName: Ryan, lastName: Duke, email: ryand@example.com, reason for booking : Exploring AI voice solutions, meetingDate&Time: December 31, 2024 at 7:15 PM }\\nAI: \\\"Great! I’ve scheduled your meeting for December 31, 2024, at 7:15 PM.  Is there anything else I can assist you with?\\\"\\n\\n\\nScenario 2 Caller wants to Reschedule the meeting\\n\\nInstructions :  \\n\\nChoose this scenario if the caller wants to reschedule a meeting. Ask them for the reason for rescheduling,and only if you haven't already done it before in the conversation earlier  refer to the  Current Booked Meeting and  Last Call Summary value in the Variables section to confirm the date & time previously booked and the reasoning for the original booking.\\nUse the available dates and times from the Get Caller Availability and Book Meeting Instructions/Section to help rebook the meeting. Follow the same logic form those instructions  to determine their availability and provide suitable options.\\nOnce the caller selects a new date and time, call the RescheduleMeeting function with the following details(these details should all be mentioned in the Variables section):\\nFirst name\\nLast name\\nEmail\\nReason for rescheduling\\nNew date and time for the meeting\\nOriginal reason for booking the meeting\\nAfter confirming the rescheduled meeting, let them know it’s been updated and ask if there’s anything else they need. \\nDialogue Example\\nCaller: \\\"Hi, I’d like to reschedule my meeting.\\\"\\nAI: \\\"Of course. Can you let me know the reason for rescheduling the meeting?\\\"\\nCaller: \\\"Something urgent came up at work, and I won’t be available at the original time.\\\"\\nAI: \\\"Understood. Let me check the availability to help you reschedule. When do you think you’ll be most available?\\\"\\nCaller: \\\"Next Monday in the afternoon would work best.\\\"\\nAI: \\\"Got it. Let me check for available times next Monday.\\\"\\n\\n{current date: December 29, 2024 (this is just an example; the actual current date is mentioned in the instructions above)}\\n\\nAI : \\\"Next Monday would be January 1, 2025. In the afternoon, I have the following times available: 2:00 PM, 3:30 PM, and 4:45 PM. Do any of these work for you?\\\"\\nCaller: \\\"3:30 PM works perfectly.\\\"\\nAI: \\\"Great! Let me update the meeting to the new time. Just to confirm: I’ll reschedule your meeting for January 1, 2025, at 3:30 PM.\\\"\\n\\nCaller: “Yep that is correct”\\n\\nCall Function:\\n{ (call RescheduleMeeting function here) firstName: Ryan, lastName: Duke, email:ryand@example.com, reason for rescheduling: Urgent work conflict,  newmeetingDate&Time: January 1, 2025 at 3:30 PM,reason for booking: Exploring AI voice solutions }\\nAI: \\\"Your meeting has been successfully rescheduled for January 1, 2025, at 3:30 PM. Is there anything else I can assist you with today?\\\"\\n\\n\\n\\n\\nScenario 3 Caller wants to Cancel The Meeting \\n\\nChoose this scenario if the caller wants to cancel a meeting. Start by asking the caller for the reason for canceling. Attempt to persuade them to reschedule instead by offering 2-3 alternative options or highlighting the benefits of the meeting.\\nIf the caller agrees to reschedule, proceed by following Scenario 2 to book a new meeting.\\nIf the caller insists on canceling, call the CancelMeeting function with the email (from the Variables section) and the reason for canceling provided by the caller. Confirm the cancellation and politely ask if there’s anything else you can assist them with\\n\\nDialogue Example\\n\\nCaller: \\\"Hi, I’d like to cancel my meeting.\\\"\\nAI: \\\"I’m sorry to hear that. Could you share the reason for canceling the meeting?\\\"\\nCaller: \\\"Well, I initially wanted to explore using AI to replace offshore hires for my call center, but the investors in my company don’t really trust AI. So, I’ve decided not to go through with it.\\\"\\nAI: \\\"I understand your concerns, and it’s completely normal for investors to be cautious about new technologies. That’s exactly why we offer a free trial meeting—to provide a clear understanding of how AI can work for your business and address any concerns. Would you consider keeping the meeting so you have all the information to share with your investors?\\\"\\nCaller: \\\"I don’t think it will change their minds right now.\\\"\\nAI: \\\"I get it, but perhaps rescheduling to a later date could give them more time to think it over. We can revisit the discussion when they’re more open to exploring AI solutions. How about we pick a date in the future that works better for you?\\\"\\nCaller: \\\"No, I really just want to cancel the meeting for now.\\\"\\nAI: \\\"Understood. Let me process the cancellation for you. Just to confirm, I’ll cancel the meeting and note the reason as ‘investors don’t trust AI.’\\\"\\nCaller : “ Yep that is correct”\\nCall Function:\\n{ (call CancelMeeting function here) email: ryand@example.com, reasonForCanceling: Investors don’t trust AI }\\nAI: \\\"Your meeting has been successfully canceled. If you’d like to revisit this in the future, feel free to reach out. Is there anything else I can assist you with today?\\\"\\nCaller: \\\"No, that’s all. Thanks!\\\"\\nStep 3  End the Call\\n\\nInstructions :\\nThis is the final step you take once you’ve completed the task or service the caller requested, and the caller confirms they don’t need any further assistance. Politely thank the caller, wish them well, and then call the EndCall Function to conclude the interaction. Only call the end call function when user confirms he doesnt need any other assistance. do not call it any other time. \\n\\nDialogue Example : \\n\\nAI: \\\"Is there anything else I can assist you with today?\\\"\\nUser: \\\"No, that’s all. Thanks!\\\"\\nAI: \\\"Thank you for calling! Have a great day!\\\"\\nCall Function:\\n{ (call EndCall function here) }\"\n      }\n    ],\n    \"provider\": \"openai\",\n    \"temperature\": 0.7\n  },\n  \"firstMessage\": \"\",\n  \"endCallFunctionEnabled\": true,\n  \"clientMessages\": [\n    \"transcript\",\n    \"hang\",\n    \"function-call\",\n    \"speech-update\",\n    \"metadata\",\n    \"transfer-update\",\n    \"conversation-update\"\n  ],\n  \"serverMessages\": [\n    \"end-of-call-report\",\n    \"status-update\"\n  ],\n  \"serverUrl\": \"https://hook.us1.make.com/glfi7s379a39u6bin961ik8vqjm1hudd\",\n  \"backchannelingEnabled\": false,\n  \"analysisPlan\": {\n    \"summaryPrompt\": \"Summarize the discussion, focusing on whether a meeting was booked, rescheduled, or canceled. Clearly state the reason for booking, rescheduling, or canceling the meeting. If a meeting was booked, provide detailed information on what the caller was looking for, the specific services they were interested in, and any key points discussed during the call.\",\n    \"structuredDataPrompt\": \"You are an expert data extractor. You will be given a transcript of a call. Extract structured data per the JSON Schema. All these details where given during call while appoimentdate being the date the user pick to book the meeting.\\n\\n{\\n  \\\"structuredDataSchema\\\": {\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"properties\\\": {\\n      \\\"name\\\": { \\\"type\\\": \\\"string\\\" },\\n      \\\"email\\\": { \\\"type\\\": \\\"string\\\" },\\n      \\\"appointmentDate\\\": { \\\"type\\\": \\\"string\\\" }\\n    },\\n    \\\"required\\\": [\\\"name\\\", \\\"email\\\", \\\"appointmentDate\\\"]\\n  }\\n}\"\n  },\n  \"backgroundDenoisingEnabled\": false\n}\n}",
                                "status": "200",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ]
                            },
                            "metadata": {
                                "designer": {
                                    "x": 4800,
                                    "y": 0
                                },
                                "restore": {
                                    "expect": {
                                        "headers": {
                                            "mode": "chose",
                                            "items": [
                                                null
                                            ]
                                        }
                                    }
                                },
                                "expect": [
                                    {
                                        "name": "status",
                                        "type": "uinteger",
                                        "label": "Status",
                                        "required": true,
                                        "validate": {
                                            "min": 100
                                        }
                                    },
                                    {
                                        "name": "body",
                                        "type": "any",
                                        "label": "Body"
                                    },
                                    {
                                        "name": "headers",
                                        "spec": [
                                            {
                                                "name": "key",
                                                "type": "text",
                                                "label": "Key",
                                                "required": true,
                                                "validate": {
                                                    "max": 256
                                                }
                                            },
                                            {
                                                "name": "value",
                                                "type": "text",
                                                "label": "Value",
                                                "required": true,
                                                "validate": {
                                                    "max": 4096
                                                }
                                            }
                                        ],
                                        "type": "array",
                                        "label": "Custom headers",
                                        "validate": {
                                            "maxItems": 16
                                        }
                                    }
                                ],
                                "advanced": true
                            }
                        }
                    ]
                }
            ]
        }
    ],
    "metadata": {
        "instant": true,
        "version": 1,
        "scenario": {
            "roundtrips": 1,
            "maxErrors": 3,
            "autoCommit": true,
            "autoCommitTriggerLast": true,
            "sequential": false,
            "slots": null,
            "confidential": false,
            "dataloss": false,
            "dlq": false,
            "freshVariables": false
        },
        "designer": {
            "orphans": []
        },
        "zone": "us1.make.com"
    }
}
